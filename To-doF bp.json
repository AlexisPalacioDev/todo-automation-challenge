{
  "name": "To-doF",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "todo-webhook",
        "responseMode": "responseNode",
        "options": {}
      },
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        368,
        144
      ],
      "id": "01035dd8-6cdd-4eae-bc12-9becea1abb3e",
      "webhookId": "48e9624f-e0ef-4f8e-b9b2-5c5f7c558f66"
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        368,
        336
      ],
      "id": "49a34d99-efc1-45af-9170-e6dd36f00e9c",
      "name": "Telegram Trigger",
      "webhookId": "acea79b6-8a99-4520-9965-22db3ad999a7",
      "credentials": {
        "telegramApi": {
          "id": "qvjFJVkNpIgIJmaX",
          "name": "Bencio"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const http = $json ?? {};\nconst ai = $('Message a model').first().json?.message?.content ?? {};\nconst extract = $('Extract Todo').first().json ?? {};\n\nconst title   = ai.title ?? http?.todo?.title ?? http?.n8n_response?.title ?? 'Tarea';\nconst user    = http?.todo?.user_email ?? http?.n8n_response?.user ?? extract.user_email ?? 'desconocido';\nconst message = ai.message ?? `✅ To-do creada: ${title}`;\n\n// IDs para diferentes plataformas\nconst chat_id = extract.chat_id ?? null; // Telegram\nconst whatsapp_jid = extract.whatsapp_jid ?? null; // WhatsApp\n\nconst status = http?.n8n_response?.status ?? (http?.success ? 'created' : 'error');\n\nreturn [{\n  json: {\n    chat_id,\n    whatsapp_jid,\n    text: message,\n    response: message,\n    title,\n    user,\n    status\n  }\n}];\n"
      },
      "id": "7cfa9a27-618c-47a9-8844-1f2c05f4ad2b",
      "name": "Format Success Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        1616,
        0
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://todo-automation-challenge.vercel.app/api/n8n/add-todo",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "title",
              "value": "={{ $json.message.content.title }}"
            },
            {
              "name": "user_email",
              "value": "={{ $('Extract Todo').item.json.user_email }}"
            },
            {
              "name": "enhance",
              "value": "={{ $('Extract Todo').item.json.enhance }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "69e9b155-902c-4536-a47a-7c0938efdec7",
      "name": "Create Todo",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        1392,
        0
      ]
    },
    {
      "parameters": {
        "jsCode": "// Code node (Run Once for Each Item)\n\n// Toma el primer item de entrada\nconst item = $input.first() ?? {};\nconst data = item.json ?? {};\n\n// Detectar origen y extraer texto + email\nlet text = '';\nlet userEmail = 'webapp@example.com';\nlet chatId;\nlet whatsappJid;\n\n// — Caso Web App (Webhook): el body viene anidado en json.body\nif (data.body?.message?.text) {\n  text = data.body.message.text || '';\n  userEmail = data.body.user_email || 'webapp@example.com';\n}\n// — Caso Telegram Trigger directo al Code node: message en la raíz\nelse if (data.message?.text) {\n  text = data.message.text || '';\n  userEmail = 'alexis26-93@live.com';\n  chatId = $input.first().json.message.chat.id;\n}\n// — Caso WhatsApp (EvolutionApi): diferentes tipos de mensajes\nelse if (data.body?.data?.message) {\n  // Mensaje simple\n  if (data.body.data.message.conversation) {\n    text = data.body.data.message.conversation;\n  }\n  // Mensaje extendido\n  else if (data.body.data.message.extendedTextMessage?.text) {\n    text = data.body.data.message.extendedTextMessage.text;\n  }\n  // Mensaje efímero (disappearing message)\n  else if (data.body.data.message.ephemeralMessage?.message?.extendedTextMessage?.text) {\n    text = data.body.data.message.ephemeralMessage.message.extendedTextMessage.text;\n  }\n  // Mensaje efímero simple\n  else if (data.body.data.message.ephemeralMessage?.message?.conversation) {\n    text = data.body.data.message.ephemeralMessage.message.conversation;\n  }\n  \n  if (text) {\n    userEmail = 'alexis26-93@live.com'; // Email fijo para WhatsApp\n    whatsappJid = data.body.data.key.remoteJid;\n  }\n}\n\n// Normalizar texto (quitar #to-do si viene)\nconst todoText = (text || '').replace('#to-do', '').trim();\n\nif (!todoText) {\n  return [\n    { json: { error: true, msg: 'Falta texto después de #to-do' } }\n  ];\n}\n\nreturn [\n  { json: { \n    title: todoText, \n    user_email: userEmail, \n    enhance: true,\n    ...(chatId != null ? { chat_id: chatId } : {}),\n    ...(whatsappJid != null ? { whatsapp_jid: whatsappJid } : {})\n  } }\n];\n"
      },
      "id": "3425b615-5ea3-4ba4-88ec-a43aa6161e56",
      "name": "Extract Todo",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        592,
        144
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id }}",
        "text": "={{ $json.response }}",
        "additionalFields": {}
      },
      "executeOnce": false,
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2288,
        48
      ],
      "id": "68023f96-6f64-4b26-9642-f2b542e42503",
      "name": "Send a text message1",
      "webhookId": "720f2cca-7659-452d-9577-23d397455ccc",
      "alwaysOutputData": false,
      "credentials": {
        "telegramApi": {
          "id": "qvjFJVkNpIgIJmaX",
          "name": "Bencio"
        }
      },
      "continueOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Eres un clasificador. Intents válidos:\n- smalltalk: saludo, charla casual, preguntas personales (“ya comiste?”, “cómo vas?”).\n- todo_create: crear tarea. Debe haber al menos un título identificable.\n- todo_query: listar/consultar tareas.\n- other: todo lo demás.\n\nResponde SOLO JSON:\n{\n  \"intent\": \"<smalltalk|todo_create|todo_query|other>\",\n  \"confidence\": 0-1,\n  \"entities\": { \"title\": \"<string|null>\", \"datetime\": \"<string|null>\" },\n  \"needs_clarification\": <true|false>,\n  \"missing\": [\"title\" | \"datetime\" ...]\n}\n\nReglas:\n- Si el mensaje es genérico tipo “quiero agendar una tarea” y no hay título claro, intent= \"todo_create\", needs_clarification=true, missing=[\"title\"].\n- Frases de conversación (“ya comiste?”, “buenas”, “gracias”) → intent=\"smalltalk\".\n- No inventes entidades.\n",
              "role": "system"
            },
            {
              "content": "={{ $json.title }}\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        816,
        144
      ],
      "id": "4450ad89-db95-443f-b7fb-06d81c771e80",
      "name": "Message a model",
      "credentials": {
        "openAiApi": {
          "id": "SbhKq2C0hsXguIDx",
          "name": "openai-prueba-intake"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "=  {\n    \"message\": \"{{ $json.response }}\",\n    \"status\": \"{{ $json.status }}\"\n  }",
        "options": {}
      },
      "id": "77ea066d-ddcc-4d9e-a809-52dd06e1fbcd",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1840,
        0
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "messages-upsert",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        368,
        -48
      ],
      "id": "8271da32-b268-4d34-a962-8c8276cec9d5",
      "name": "EvolutionApi",
      "webhookId": "48535442-7028-4909-8468-d47d00a3aa58"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "To-do",
        "remoteJid": "={{ $json.whatsapp_jid }}",
        "messageText": "={{ $json.response }}",
        "options_message": {}
      },
      "executeOnce": false,
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        2288,
        240
      ],
      "id": "0d9c90ce-8be0-404d-8aba-65e15c840974",
      "name": "Enviar texto",
      "credentials": {
        "evolutionApi": {
          "id": "335dJI3aHJ7lLGvE",
          "name": "Evolution account"
        }
      },
      "continueOnFail": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.message.content.is_task }}",
              "value2": true
            }
          ]
        }
      },
      "id": "fa6aa3d1-33bb-474c-91e1-8061d3ffa349",
      "name": "Is Task?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1168,
        144
      ]
    },
    {
      "parameters": {
        "jsCode": "const ai = $('Message a model').first().json?.message?.content ?? {};\nconst extract = $('Extract Todo').first().json ?? {};\n\nconst message = ai.message || 'No veo una tarea específica. ¿Qué tarea te gustaría que agregue?';\n\n// IDs para diferentes plataformas\nconst chat_id = extract.chat_id ?? null; // Telegram\nconst whatsapp_jid = extract.whatsapp_jid ?? null; // WhatsApp\n\nreturn [{\n  json: {\n    chat_id,\n    whatsapp_jid,\n    text: message,\n    response: message,\n    is_task: false\n  }\n}];\n"
      },
      "id": "af4d0f8e-d316-4d4c-ad2c-f55c962cae12",
      "name": "Format Non-Task Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        1840,
        288
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.chat_id }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "a5f5ebb2-2304-4870-89b1-4749c289ef78",
      "name": "Is Telegram?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2064,
        48
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.whatsapp_jid }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "7c950428-d3db-4d82-9a59-8b27f91c5fd4",
      "name": "Is WhatsApp?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2064,
        240
      ]
    }
  ],
  "pinData": {
    "EvolutionApi": [
      {
        "json": {
          "headers": {
            "host": "n8n-n8n.lehnwx.easypanel.host",
            "user-agent": "axios/1.7.9",
            "content-length": "1070",
            "accept-encoding": "gzip, compress, deflate, br",
            "content-type": "application/json",
            "x-forwarded-for": "54.196.66.88",
            "x-forwarded-host": "n8n-n8n.lehnwx.easypanel.host",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "336551ccbbe1",
            "x-real-ip": "54.196.66.88"
          },
          "params": {},
          "query": {},
          "body": {
            "event": "messages.upsert",
            "instance": "To-do",
            "data": {
              "key": {
                "remoteJid": "573216551350@s.whatsapp.net",
                "fromMe": false,
                "id": "3A799DBA0632F3A2B779"
              },
              "pushName": "Alexis Palacio",
              "status": "DELIVERY_ACK",
              "message": {
                "messageContextInfo": {
                  "deviceListMetadata": {
                    "senderKeyHash": "e+q/hWtFAkAeSw==",
                    "senderTimestamp": "1755999226",
                    "recipientKeyHash": "1PdTAT693nm/aQ==",
                    "recipientTimestamp": "1756404625"
                  },
                  "deviceListMetadataVersion": 2,
                  "messageSecret": "LAqpdIiD9NgH+mxyjG+fZxp4Kq7sfHV92X39GZJZwy4="
                },
                "conversation": "Hola"
              },
              "contextInfo": {
                "expiration": 86400,
                "ephemeralSettingTimestamp": "1747320477",
                "disappearingMode": {
                  "initiator": "CHANGED_IN_CHAT",
                  "trigger": "CHAT_SETTING",
                  "initiatedByMe": true
                }
              },
              "messageType": "conversation",
              "messageTimestamp": 1756406098,
              "instanceId": "4eb15468-fd69-4874-89dc-63eb30714def",
              "source": "ios"
            },
            "destination": "https://n8n-n8n.lehnwx.easypanel.host/webhook",
            "date_time": "2025-08-28T15:34:58.710Z",
            "sender": "573053584393@s.whatsapp.net",
            "server_url": "https://evolution-api-evolution-api.hpyyyy.easypanel.host",
            "apikey": "00736ADC5DA2-4B1D-B197-02A34E0D98AB"
          },
          "webhookUrl": "https://n8n-n8n.lehnwx.easypanel.host/webhook/messages-upsert",
          "executionMode": "production"
        }
      }
    ]
  },
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Extract Todo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Success Response": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Todo": {
      "main": [
        [
          {
            "node": "Format Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Todo": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Extract Todo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Is Task?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Task?": {
      "main": [
        [
          {
            "node": "Create Todo",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Format Non-Task Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Non-Task Response": {
      "main": [
        [
          {
            "node": "Is Telegram?",
            "type": "main",
            "index": 0
          },
          {
            "node": "Is WhatsApp?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Success Response": {
      "main": [
        [
          {
            "node": "Is Telegram?",
            "type": "main",
            "index": 0
          },
          {
            "node": "Is WhatsApp?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is Telegram?": {
      "main": [
        [
          {
            "node": "Send a text message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is WhatsApp?": {
      "main": [
        [
          {
            "node": "Enviar texto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EvolutionApi": {
      "main": [
        [
          {
            "node": "Extract Todo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "35c8f773-1340-40ef-b2fe-b8b7da078a7e",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "d91aa16ea53d37fd73789f383cf9eaba769caba3a9692b8a422b4f8924d4d856"
  },
  "id": "eamJZ5FzDfqVTPFF",
  "tags": []
}