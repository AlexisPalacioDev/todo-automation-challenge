@import "tailwindcss";

:root {
  --background: #f0f2f5;
  --foreground: #2c3e50;
  
  /* Primary colors */
  --primary: #667eea;
  --primary-dark: #5a67d8;
  --success: #10b981;
  --warning: #f59e0b;
  --error: #ef4444;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #1a1d29;
    --foreground: #e2e8f0;
  }
}

/* Dark mode override - when dark class is present */
.dark {
  --background: #0f172a;
  --foreground: #f1f5f9;
  
  /* Text colors */
  --text-primary: #f8fafc;
  --text-secondary: #cbd5e1;
  --text-tertiary: #94a3b8;
}

/* Light mode override - COMPLETELY REWORKED */
html:not(.dark) {
  --background: #f8fafc;
  --foreground: #1e293b;
  
  /* Text colors */
  --text-primary: #0f172a;
  --text-secondary: #475569;
  --text-tertiary: #64748b;
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Text', 'Segoe UI', 'Roboto', 'Helvetica Neue', Arial, sans-serif;
  font-weight: 400;
  line-height: 1.6;
  letter-spacing: -0.01em;
  min-height: 100vh;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* ðŸš¨ NUCLEAR OPTION: HARDCODED CLEAN SHADOWS FOR LIGHT MODE */

/* Light mode cards - NO VARIABLES, HARDCODED */
html:not(.dark) .neu-card {
  background: #ffffff;
  border-radius: 20px;
  box-shadow: 
    0 2px 8px rgba(0, 0, 0, 0.04),
    0 1px 4px rgba(0, 0, 0, 0.02);
  border: 1px solid rgba(0, 0, 0, 0.05);
  isolation: isolate;
  overflow: hidden;
  clip-path: inset(0 round 20px);
}

html:not(.dark) .neu-card:hover {
  box-shadow: 
    0 4px 12px rgba(0, 0, 0, 0.06),
    0 2px 6px rgba(0, 0, 0, 0.04);
}

html:not(.dark) .neu-card-inset {
  background: #f8fafc;
  border-radius: 16px;
  box-shadow: 
    inset 0 1px 2px rgba(0, 0, 0, 0.05),
    0 1px 2px rgba(255, 255, 255, 0.9);
  border: 1px solid rgba(0, 0, 0, 0.03);
  isolation: isolate;
  overflow: hidden;
  clip-path: inset(0 round 16px);
}

html:not(.dark) .neu-button {
  background: linear-gradient(145deg, #ffffff, #f1f5f9);
  border-radius: 12px;
  box-shadow: 
    0 1px 3px rgba(0, 0, 0, 0.04),
    0 1px 2px rgba(0, 0, 0, 0.02);
  border: 1px solid rgba(0, 0, 0, 0.04);
  transition: all 0.2s ease;
  isolation: isolate;
  overflow: hidden;
  clip-path: inset(0 round 12px);
}

html:not(.dark) .neu-button:hover {
  transform: translateY(-1px);
  box-shadow: 
    0 2px 6px rgba(0, 0, 0, 0.06),
    0 1px 4px rgba(0, 0, 0, 0.04);
}

html:not(.dark) .neu-button:active {
  transform: translateY(0px);
  box-shadow: 
    inset 0 1px 2px rgba(0, 0, 0, 0.06),
    0 1px 2px rgba(255, 255, 255, 0.8);
}

html:not(.dark) .neu-input {
  background: #ffffff;
  border-radius: 12px;
  box-shadow: 
    inset 0 1px 2px rgba(0, 0, 0, 0.04),
    0 1px 2px rgba(255, 255, 255, 0.9);
  border: 1px solid rgba(0, 0, 0, 0.06);
  transition: all 0.2s ease;
  isolation: isolate;
  overflow: hidden;
  clip-path: inset(0 round 12px);
}

html:not(.dark) .neu-input:focus {
  outline: none;
  box-shadow: 
    inset 0 1px 2px rgba(0, 0, 0, 0.04),
    0 0 0 3px rgba(102, 126, 234, 0.1);
}

/* Dark mode styles (keep as fallback) */
.dark .neu-card,
.neu-card {
  background: var(--neu-bg-light, #1a1d29);
  border-radius: 20px;
  box-shadow: 
    0 8px 32px rgba(0, 0, 0, 0.3),
    0 4px 16px rgba(0, 0, 0, 0.2);
  border: 1px solid rgba(255, 255, 255, 0.1);
  isolation: isolate;
  overflow: hidden;
}

.dark .neu-card-inset,
.neu-card-inset {
  background: var(--neu-bg-light, #1a1d29);
  border-radius: 16px;
  box-shadow: 
    inset 0 4px 8px rgba(0, 0, 0, 0.2),
    inset 0 -4px 8px rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 255, 255, 0.08);
  isolation: isolate;
  overflow: hidden;
}

.dark .neu-button,
.neu-button {
  background: linear-gradient(145deg, var(--neu-bg-light, #1a1d29), var(--neu-bg-dark, #0f1119));
  border-radius: 12px;
  box-shadow: 
    0 4px 8px rgba(0, 0, 0, 0.3),
    0 2px 4px rgba(0, 0, 0, 0.2);
  border: 1px solid rgba(255, 255, 255, 0.1);
  transition: all 0.2s ease;
  isolation: isolate;
  overflow: hidden;
}

/* Override the old variables completely */
:root {
  --neu-bg-light: transparent;
  --neu-bg-dark: transparent;
  --neu-shadow-light: transparent;
  --neu-shadow-dark: transparent;
  --neu-border: transparent;
}

.neu-toggle {
  background: var(--neu-bg-light);
  border-radius: 25px;
  box-shadow: 
    inset 4px 4px 8px var(--neu-shadow-dark),
    inset -4px -4px 8px var(--neu-shadow-light);
  border: none;
}

.neu-toggle-active {
  background: linear-gradient(145deg, var(--primary), var(--primary-dark));
  box-shadow: 
    4px 4px 8px var(--neu-shadow-dark),
    -4px -4px 8px var(--neu-shadow-light);
}

/* Animations */
@keyframes neu-pulse {
  0%, 100% {
    box-shadow: 
      20px 20px 60px var(--neu-shadow-dark),
      -20px -20px 60px var(--neu-shadow-light);
  }
  50% {
    box-shadow: 
      25px 25px 70px var(--neu-shadow-dark),
      -25px -25px 70px var(--neu-shadow-light);
  }
}

.neu-pulse {
  animation: neu-pulse 2s ease-in-out infinite;
}

/* Glass morphism effect */
.glass {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.18);
  border-radius: 16px;
}

/* Slide down animation */
@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-20px);
    max-height: 0;
  }
  to {
    opacity: 1;
    transform: translateY(0);
    max-height: 500px;
  }
}

@keyframes slideUp {
  from {
    opacity: 1;
    transform: translateY(0);
    max-height: 500px;
  }
  to {
    opacity: 0;
    transform: translateY(-20px);
    max-height: 0;
  }
}

.slide-down {
  animation: slideDown 0.3s ease-out forwards;
}

.slide-up {
  animation: slideUp 0.3s ease-out forwards;
}

/* Typography utilities */
.text-display {
  font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Display', 'Segoe UI', 'Roboto', 'Helvetica Neue', Arial, sans-serif;
  font-weight: 600;
  line-height: 1.2;
  letter-spacing: -0.02em;
}

.text-primary {
  color: var(--text-primary, var(--foreground));
}

.text-secondary {
  color: var(--text-secondary, var(--foreground));
  opacity: 0.8;
}

.text-tertiary {
  color: var(--text-tertiary, var(--foreground));
  opacity: 0.6;
}

/* Enhanced button styles */
.btn-primary {
  background: linear-gradient(145deg, var(--primary), var(--primary-dark));
  color: white;
  font-weight: 500;
  letter-spacing: -0.01em;
}

/* Enhanced card titles */
.card-title {
  font-family: -apple-system, BlinkMacSystemFont, 'SF Pro Display', 'Segoe UI', 'Roboto', 'Helvetica Neue', Arial, sans-serif;
  font-weight: 600;
  color: var(--text-primary, var(--foreground));
  line-height: 1.3;
  letter-spacing: -0.02em;
}

/* Swipe to delete animations */
@keyframes swipeDeleteIndication {
  0%, 100% {
    opacity: 0.7;
  }
  50% {
    opacity: 1;
  }
}

@keyframes deleteSlideOut {
  0% {
    transform: translateX(0);
    opacity: 1;
  }
  100% {
    transform: translateX(-100%);
    opacity: 0;
  }
}

@keyframes deleteBackground {
  0% {
    background-color: transparent;
  }
  100% {
    background-color: rgba(239, 68, 68, 0.1);
  }
}

.swipe-delete-indicator {
  animation: swipeDeleteIndication 1s ease-in-out infinite;
}

.todo-deleting {
  animation: deleteSlideOut 0.3s ease-out forwards;
}

.delete-background {
  animation: deleteBackground 0.2s ease-out forwards;
}

/* Enhanced haptic feedback and swipe indicators */
@keyframes hapticBump {
  0% { transform: scale(1); }
  50% { transform: scale(1.02); }
  100% { transform: scale(1); }
}

@keyframes swipeHint {
  0% { opacity: 0.5; transform: translateX(0); }
  50% { opacity: 1; transform: translateX(5px); }
  100% { opacity: 0.5; transform: translateX(0); }
}

@keyframes success-flash {
  0% { background-color: transparent; }
  50% { background-color: rgba(34, 197, 94, 0.2); }
  100% { background-color: transparent; }
}

@keyframes delete-flash {
  0% { background-color: transparent; }
  50% { background-color: rgba(239, 68, 68, 0.2); }
  100% { background-color: transparent; }
}

.haptic-feedback {
  animation: hapticBump 0.1s ease-out;
}

.swipe-hint {
  animation: swipeHint 2s ease-in-out infinite;
}

.success-feedback {
  animation: success-flash 0.5s ease-out;
}

.delete-feedback {
  animation: delete-flash 0.5s ease-out;
}

/* ðŸ”§ SHADOW FIXES - Utilities for proper shadow containment */
.shadow-contained {
  isolation: isolate;
  contain: layout style paint;
  overflow: hidden;
}

.shadow-clean {
  box-shadow: 
    0 4px 16px rgba(0, 0, 0, 0.08),
    0 2px 8px rgba(0, 0, 0, 0.04);
}

.shadow-clean-hover {
  box-shadow: 
    0 8px 32px rgba(0, 0, 0, 0.12),
    0 4px 16px rgba(0, 0, 0, 0.08);
}

.shadow-clean-inset {
  box-shadow: 
    inset 0 2px 4px rgba(0, 0, 0, 0.1),
    inset 0 -2px 4px rgba(255, 255, 255, 0.1);
}

/* Task card specific fixes */
.task-card-shadow {
  box-shadow: 
    0 4px 16px rgba(0, 0, 0, 0.08),
    0 2px 8px rgba(0, 0, 0, 0.04);
  border: 1px solid rgba(0, 0, 0, 0.05);
  isolation: isolate;
  overflow: hidden;
}

.task-card-shadow:hover {
  box-shadow: 
    0 8px 32px rgba(0, 0, 0, 0.12),
    0 4px 16px rgba(0, 0, 0, 0.08);
}

/* Button shadow fixes */
.btn-shadow-fix {
  box-shadow: 
    0 2px 4px rgba(0, 0, 0, 0.1),
    0 1px 2px rgba(0, 0, 0, 0.06);
  isolation: isolate;
  overflow: hidden;
}

.btn-shadow-fix:hover {
  box-shadow: 
    0 4px 8px rgba(0, 0, 0, 0.15),
    0 2px 4px rgba(0, 0, 0, 0.08);
}

/* Dark mode shadow adjustments */
@media (prefers-color-scheme: dark) {
  .shadow-clean {
    box-shadow: 
      0 4px 16px rgba(0, 0, 0, 0.3),
      0 2px 8px rgba(0, 0, 0, 0.2);
  }
  
  .shadow-clean-hover {
    box-shadow: 
      0 8px 32px rgba(0, 0, 0, 0.4),
      0 4px 16px rgba(0, 0, 0, 0.3);
  }
  
  .task-card-shadow {
    box-shadow: 
      0 4px 16px rgba(0, 0, 0, 0.3),
      0 2px 8px rgba(0, 0, 0, 0.2);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
}

/* Force hardware acceleration for better shadow rendering */
.gpu-accelerated {
  transform: translateZ(0);
  backface-visibility: hidden;
  perspective: 1000px;
}

/* Clip-path fallback for stubborn shadow issues */
.force-clip-rounded {
  clip-path: inset(0 round 16px);
}

.force-clip-rounded-lg {
  clip-path: inset(0 round 20px);
}
