{
  "name": "To-doF",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "todo-webhook",
        "responseMode": "responseNode",
        "options": {}
      },
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -832,
        48
      ],
      "id": "a71c75e2-e48a-4657-adf2-c673803f626f",
      "webhookId": "48e9624f-e0ef-4f8e-b9b2-5c5f7c558f66"
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -848,
        224
      ],
      "id": "b978d971-d8ed-424d-a57d-d5d8433c48ff",
      "name": "Telegram Trigger",
      "webhookId": "acea79b6-8a99-4520-9965-22db3ad999a7",
      "credentials": {
        "telegramApi": {
          "id": "qvjFJVkNpIgIJmaX",
          "name": "Bencio"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const http = $json ?? {};\nconst ai = $('Message a model').first().json?.message?.content ?? {};\nconst extract = $('Extract Todo').first().json ?? {};\n\nconst title   = ai.title ?? http?.todo?.title ?? http?.n8n_response?.title ?? 'Tarea';\nconst user    = http?.todo?.user_email ?? http?.n8n_response?.user ?? extract.user_email ?? 'desconocido';\nconst message = ai.message ?? `✅ To-do creada: ${title}`;\n\nconst category           = ai.category ?? 'otro';\nconst category_is_custom = ai.category_is_custom ?? false;\nconst category_reason    = ai.category_reason;\n\n// chat_id: si vino de Telegram, lo pasó Extract Todo\nconst chat_id = extract.chat_id ?? null;\n\nconst status = http?.n8n_response?.status ?? (http?.success ? 'created' : 'error');\n\nreturn [{\n  json: {\n    chat_id,\n    text: message,\n    response: message,\n    title,\n    user,\n    category,\n    category_is_custom,\n    category_reason,\n    status\n  }\n}];\n"
      },
      "id": "3ca5a2a0-9250-48e8-8921-be79dacbbfb7",
      "name": "Format Success Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        240,
        112
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://todo-automation-challenge.vercel.app/api/n8n/add-todo",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "title",
              "value": "={{ $json.message.content.title }}"
            },
            {
              "name": "user_email",
              "value": "={{ $('Extract Todo').item.json.user_email }}"
            },
            {
              "name": "enhance",
              "value": "={{ $('Extract Todo').item.json.enhance }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "de7aff98-3a2f-4115-b7d9-fb2508c2672f",
      "name": "Create Todo",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        0,
        240
      ]
    },
    {
      "parameters": {
        "jsCode": "// Code node (Run Once for Each Item)\n\n// Toma el primer item de entrada\nconst item = $input.first() ?? {};\nconst data = item.json ?? {};\n\n// Detectar origen y extraer texto + email\nlet text = '';\nlet userEmail = 'webapp@example.com';\nlet chatId;\n\n// — Caso Web App (Webhook): el body viene anidado en json.body\nif (data.body?.message?.text) {\n  text = data.body.message.text || '';\n  userEmail = data.body.user_email || 'webapp@example.com';\n}\n// — Caso Telegram Trigger directo al Code node: message en la raíz\nelse if (data.message?.text) {\n  text = data.message.text || '';\n  userEmail = 'alexis26-93@live.com';\n\nchatId = $input.first().json.message.chat.id;\n// fijo para Telegram\n}\n\n// Normalizar texto (quitar #to-do si viene)\nconst todoText = (text || '').replace('#to-do', '').trim();\n\nif (!todoText) {\n  return [\n    { json: { error: true, msg: 'Falta texto después de #to-do' } }\n  ];\n}\n\nreturn [\n  { json: { title: todoText, user_email: userEmail, enhance: true,\n  ...(chatId != null ? { chat_id: chatId } : {})\n  } \n}];\n"
      },
      "id": "4c0d179f-6554-40d3-b673-a2747524cea1",
      "name": "Extract Todo",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -560,
        112
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $json.chat_id || null }}",
        "text": "={{ $json.response }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        672,
        112
      ],
      "id": "77144e12-2b3b-4cdc-9615-0fe4228f8839",
      "name": "Send a text message1",
      "webhookId": "720f2cca-7659-452d-9577-23d397455ccc",
      "alwaysOutputData": false,
      "credentials": {
        "telegramApi": {
          "id": "qvjFJVkNpIgIJmaX",
          "name": "Bencio"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "Eres un normalizador y categorizador de títulos para una app de tareas.\n\nInstrucciones:\n1) Responde SIEMPRE con JSON válido y SOLO JSON.\n2) Detecta el idioma del usuario y usa ese mismo idioma en \"title\" y \"message\".\n3) Devuelve exactamente estas claves:\n   - \"title\": título corregido, claro y conciso.\n   - \"message\": debe empezar con \"✅ To-do creada: \" seguido del título corregido.\n   - \"category\": categoría principal en minúsculas y una sola palabra.\n   - \"category_is_custom\": true si no pertenece a la lista base; false si sí pertenece.\n   - \"category_reason\": breve justificación (máx. 15 palabras).\n\n4) Categorías base (elige una si aplica):\n   [\"estudio\",\"compras\",\"facturas\",\"trabajo\",\"salud\",\"ocio\",\"hogar\",\"finanzas\",\"viajes\",\"tecnología\",\"administrativo\"]\n\n5) Si la tarea no encaja con claridad en la lista base, propone una categoría nueva adecuada (p.ej., \"mantenimiento\", \"reparaciones\", \"deportes\") y marca \"category_is_custom\": true.\n\n6) No agregues nada fuera del JSON. No incluyas explicaciones adicionales.\n",
              "role": "system"
            },
            {
              "content": "={{ $json.title }}\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -336,
        112
      ],
      "id": "2fd4b35e-b9a3-4fca-afa3-643a3cd549bb",
      "name": "Message a model",
      "credentials": {
        "openAiApi": {
          "id": "SbhKq2C0hsXguIDx",
          "name": "openai-prueba-intake"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"message\": \"{{ $json.response }}\",\n  \"status\": \"{{ $json.status }}\"\n}",
        "options": {}
      },
      "id": "57e3447b-a1fd-438d-a443-746156757107",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        464,
        208
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Extract Todo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Success Response": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Todo": {
      "main": [
        [
          {
            "node": "Format Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Todo": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Extract Todo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Create Todo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Success Response": {
      "main": [
        [
          {
            "node": "Send a text message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "0cd36ac8-1df6-4f43-b626-c8067c1a3889",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "d91aa16ea53d37fd73789f383cf9eaba769caba3a9692b8a422b4f8924d4d856"
  },
  "id": "eamJZ5FzDfqVTPFF",
  "tags": []
}